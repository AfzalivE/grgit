plugins {
  id 'org.ajoberstar.defaults' version '0.7.2'
  id 'groovy'
}

group = 'org.ajoberstar'
description = 'The Groovy way to use Git.'

sourceCompatibility = '1.7'

repositories {
  mavenCentral()
}

def jgitVersion = '4.6.1.201703071140-r'
// def jgitVersion = '3.3.2.201404171909-r' // pre-bug
// def jgitVersion = '3.4.1.201406201815-r' // behavior of log command is different

dependencies {
  // groovy
  compileOnly 'org.codehaus.groovy:groovy-all:2.4.10'
  testCompile 'org.codehaus.groovy:groovy-all:2.4.10'

  // jgit
  compile "org.eclipse.jgit:org.eclipse.jgit:$jgitVersion"
  compile "org.eclipse.jgit:org.eclipse.jgit.ui:$jgitVersion"

  // agentproxy
  ['jsch', 'pageant', 'sshagent', 'usocket-jna', 'usocket-nc'].each {
    compile "com.jcraft:jsch.agentproxy.${it}:0.0.9"
  }
  // agentproxy pulls this in, but we need to force a newer version
  compile 'com.jcraft:jsch:0.1.54'

  // logging
  compile 'org.slf4j:slf4j-api:1.7.25'
  testRuntime 'org.slf4j:slf4j-simple:1.7.25'

  // testing
  testCompile('org.spockframework:spock-core:1.0-groovy-2.4') { exclude group: 'org.codehaus.groovy' }
}

test {
  useJUnit {
    excludeCategories 'org.ajoberstar.grgit.fixtures.PlatformSpecific'
  }
}

['Windows', 'Linux', 'Mac'].each { platform ->
  tasks.create("test${platform}", Test) {
    useJUnit {
      includeCategories "org.ajoberstar.grgit.fixtures.${platform}Specific"
    }
    System.properties.each { key, value ->
      if (key.startsWith('org.ajoberstar.grgit.test')) {
        systemProperties((key): value)
      }
    }
  }
}

model {
  bintray {
    owner = 'ajoberstar'
    repo = 'maven'
    pkg = 'grgit'
  }
}

wrapper {
  gradleVersion = '3.3'
}
