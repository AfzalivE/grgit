buildscript {
	repositories {
		jcenter()
		maven { url 'http://dl.bintray.com/ajoberstar/gradle-plugins' }
		maven { url 'http://dl.bintray.com/ajoberstar/temp-forks' }
	}
	dependencies {
		classpath 'org.ajoberstar:gradle-ajoberstar:0.1.1'
	}
}

group = 'org.ajoberstar'
version = '0.2.2'

apply plugin: 'groovy'
apply plugin: 'ajoberstar'

ajoberstar {
	friendlyName = 'GrGit'
	description = 'The Groovy way to use Git.'
	bintrayRepo = 'libraries'
	bintrayLabels = ['groovy', 'git']
	copyrightYears = '2012-2014'
}

sonarRunner.sonarProperties {
	property 'sonar.projectVersion', '0.2.0'
}

sourceCompatibility = '1.7'

repositories {
	mavenCentral()
}

configurations {
	docFix
}

def jgitVersion = '3.3.0.201403021825-r'

dependencies {
	// groovy
	compile localGroovy()

	// to get around groovydoc bugs
	docFix 'org.codehaus.groovy:groovy-all:2.2.1'

	// jgit
	compile "org.eclipse.jgit:org.eclipse.jgit:$jgitVersion"
	compile "org.eclipse.jgit:org.eclipse.jgit.ui:$jgitVersion"

	// agentproxy
	['jsch', 'pageant', 'sshagent', 'usocket-jna', 'usocket-nc'].each {
		compile "com.jcraft:jsch.agentproxy.${it}:0.0.7"
	}

	// logging
	compile 'org.slf4j:slf4j-api:1.7.6'
	testRuntime 'org.slf4j:slf4j-simple:1.7.6'

	// testing
	testCompile 'junit:junit:4.11'
	testCompile('org.spockframework:spock-core:0.7-groovy-1.8') { exclude group: 'org.codehaus.groovy' }
}

groovydoc {
	groovyClasspath = configurations.docFix
}

tasks.withType(Test) {
	reports {
		junitXml.outputPerTestCase = true
	}
}

test {
	useJUnit {
		excludeCategories 'org.ajoberstar.grgit.fixtures.PlatformSpecific'
	}
}

['Windows', 'Linux', 'Mac'].each { platform ->
	tasks.create("test${platform}", Test) {
		useJUnit {
			includeCategories "org.ajoberstar.grgit.fixtures.${platform}Specific"
		}
		System.properties.each { key, value ->
			if (key.startsWith('org.ajoberstar.grgit.test')) {
				systemProperties((key): value)
			}
		}
	}
}

wrapper {
	gradleVersion = '1.11'
}
